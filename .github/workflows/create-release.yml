on:
  push:
    tags:
      - '*'

name: Create release

jobs:
  build:
    name: Build release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build using Node.js 15.x
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - run: npm ci
      - run: npm run release
      - run: npm test

      # create Firefox .xpi
      - run:
          cp releases/Proclivity-${{ github.ref }}.zip releases/Proclivity-${{
          github.ref }}.xpi

      - name: Upload .zip artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: Proclivity-${{ github.ref }}.zip
          # A file, directory or wildcard pattern that describes what to upload
          path: releases/Proclivity-${{ github.ref }}
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

      - name: Upload .xpi artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: Proclivity-${{ github.ref }}.xpi
          # A file, directory or wildcard pattern that describes what to upload
          path: releases/Proclivity-${{ github.ref }}.xpis
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

      - name: Upload manifest.json
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: manifest.json
          # A file, directory or wildcard pattern that describes what to upload
          path: dist/manifest.json
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

  package-chrome:
    name: Build Chrome extension
    runs-on: ubuntu-latest
    environment: Release
    steps:
      - name: Download .zip artifact
        uses: actions/download-artifact@v2.0.8
        with:
          # Artifact name
          name: Proclivity-${{ github.ref }}.zip
          # Destination path
          path: releases/Proclivity-${{ github.ref }}.zip

      - name: Package and sign .crx extension
        id: package-crx-extension
        uses: cardinalby/webext-buildtools-chrome-crx-action@v2
        with:
          # zip file made at the packExtensionDir step
          # cannot be a variable since it ONLY processes relative paths
          zipFilePath: releases/Proclivity-${{ github.ref }}.zip
          crxFilePath: releases/Proclivity-${{ github.ref }}.crx
          privateKey: ${{ secrets.CHROME_CRX_PRIVATE_KEY }}
          # The following is optional if you need update.xml file
          # updateXmlPath: 'build/update.xml'
          # updateXmlCodebaseUrl: 'http://...'

      - name: Upload .crx
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: Proclivity-${{ github.ref }}.crx
          # A file, directory or wildcard pattern that describes what to upload
          path: releases/Proclivity-${{ github.ref }}.crx
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

  github-release:
    name: Create and upload release
    runs-on: ubuntu-latest
    steps:
      - name: Download .zip artifact
        uses: actions/download-artifact@v2.0.8
        with:
          # Artifact name
          name: Proclivity-${{ github.ref }}.zip
          # Destination path
          path: releases/Proclivity-${{ github.ref }}.zip

      - name: Download .crx artifact
        uses: actions/download-artifact@v2.0.8
        with:
          # Artifact name
          name: Proclivity-${{ github.ref }}.crx
          # Destination path
          path: releases/Proclivity-${{ github.ref }}.crx

      - name: Build changelog
        id: github-release
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.github-release.outputs.changelog }}
          draft: false

      - name: Upload .zip asset
        id: upload-zip-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: releases/Proclivity-${{ github.ref }}.zip
          asset_name: Proclivity-${{ github.ref }}.zip
          asset_content_type: application/zip
          prerelease: false

      - name: Upload .crx asset
        id: upload-crx-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: releases/Proclivity-${{ github.ref }}.crx
          asset_name: Proclivity-${{ github.ref }}.crx
          asset_content_type: application/x-chrome-extension
          prerelease: false

  publish-chrome:
    name: Publish Chrome extension to webstore
    runs-on: ubuntu-latest
    environment: Release
    steps:
      - name: Download .zip artifact
        uses: actions/download-artifact@v2.0.8
        with:
          # Artifact name
          name: Proclivity-${{ github.ref }}.zip
          # Destination path
          path: releases/Proclivity-${{ github.ref }}.zip

      - name: Chrome Addon Action
        # You may pin to the exact commit or the version.
        # uses: trmcnvn/chrome-addon@7fc5a5ad3ff597dc64d6a13de7dcaa8515328be7
        uses: trmcnvn/chrome-addon@v2
        with:
          # ID of the extension that you are updating
          extension: aidjofdjbdcdhenlocpjmimcoocbadmg
          # Path to a .zip of your addon
          zip: releases/Proclivity-${{ github.ref }}.zip
          # Google OAuth2 client id
          client-id: ${{ secrets.CHROME_WEBSTORE_CLIENT_ID }}
          # Google OAuth2 client secret
          client-secret: ${{ secrets.CHROME_WEBSTORE_CLIENT_SECRET }}
          # Google OAuth2 refresh token
          refresh-token: ${{ secrets.CHROME_WEBSTORE_REFRESH_TOKEN }}

  publish-firefox:
    name: Publish Firefox extension to webstore
    runs-on: ubuntu-latest
    environment: Release
    steps:
      - name: Download .xpi artifact
        uses: actions/download-artifact@v2.0.8
        with:
          # Artifact name
          name: Proclivity-${{ github.ref }}.xpi
          # Destination path
          path: releases/Proclivity-${{ github.ref }}.xpi

      - name: Download manifest.json artifact
        uses: actions/download-artifact@v2.0.8
        with:
          # Artifact name
          name: manifest.json
          # Destination path
          path: 'dist/manifest.json'

      - uses: trmcnvn/firefox-addon@v1
        with:
          # uuid is only necessary when updating an existing addon,
          # omitting it will create a new addon
          uuid: 'proclivity@yeagers.co'
          xpi: releases/Proclivity-${{ github.ref }}.xpi
          manifest: 'dist/manifest.json'
          api-key: ${{ secrets.FIREFOX_WEBSTORE_JWT_ISSUER }}
          api-secret: ${{ secrets.FIREFOX_WEBSTORE_JWT_SECRET }}
