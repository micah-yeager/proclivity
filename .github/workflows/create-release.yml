on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*.*.*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    environment: Release
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Build using Node.js 15.x
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - run: npm ci
      - run: npm install postcss
      - run: npm run build
      - run: npm test
      
      # pack zip and read manifest, can be reused in the following steps
      - name: Zip extension
        id: zip-extension
        uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
        with:
          extensionDir: 'dist'
          zipFilePath: 'release/Proclivity.zip'
  
      - name: Package and sign extension
        id: package-extension
        uses: cardinalby/webext-buildtools-chrome-crx-action@v2
        with:
          # zip file made at the packExtensionDir step
          # cannot be a variable since it ONLY processes relative paths
          zipFilePath: 'release/Proclivity.zip'
          crxFilePath: 'release/Proclivity.crx'
          privateKey: ${{ secrets.CHROME_CRX_PRIVATE_KEY }}
          # The following is optional if you need update.xml file
          # updateXmlPath: 'build/update.xml'
          # updateXmlCodebaseUrl: 'http://...'
          
      - name: Build changelog
        id: github-release
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.github-release.outputs.changelog }}
          draft: false
          
      - name: Upload .zip asset
        id: upload-zip-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.zip-extension.outputs.zipFilePath }}
          asset_name: Proclivity.zip
          asset_content_type: application/zip
          prerelease: false
          
      - name: Upload .crx asset
        id: upload-crx-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.package-extension.outputs.crxFilePath }}
          asset_name: Proclivity.crx
          asset_content_type: application/x-chrome-extension
          prerelease: false
      
          
      
      
      
      
